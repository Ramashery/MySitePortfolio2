name: üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Workspace

on:
  workflow_dispatch:
    inputs:
      sync_type:
        description: '–¢–∏–ø —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏'
        required: true
        default: 'full'
        type: choice
        options:
        - full
        - seo-only
        - force
      commit_message:
        description: '–°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞'
        required: false
        default: 'üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è workspace'
        type: string
  schedule:
    # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π —á–∞—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    - cron: '0 * * * *'
  push:
    branches: [ main, master ]
    paths-ignore:
      - 'README.md'
      - '.github/workflows/auto-sync-workspace.yml'

jobs:
  auto-sync:
    runs-on: ubuntu-latest
    name: üîÑ –ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    
    steps:
      - name: üì• –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–¥–∞
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        id: check-changes
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ workspace..."
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
          if git diff --name-only HEAD~1 HEAD | grep -E '\.(js|html|css|yml|toml|json|md)$'; then
            echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
          echo "sync_type=${{ github.event.inputs.sync_type }}" >> $GITHUB_OUTPUT
          echo "commit_message=${{ github.event.inputs.commit_message }}" >> $GITHUB_OUTPUT
      
      - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        run: |
          echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
          npm ci
          echo "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
      
      - name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞..."
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
          local missing_files=()
          
          if [ ! -f "netlify/functions/renderer.js" ]; then
            missing_files+=("netlify/functions/renderer.js")
          fi
          
          if [ ! -f "netlify.toml" ]; then
            missing_files+=("netlify.toml")
          fi
          
          if [ ! -f "package.json" ]; then
            missing_files+=("package.json")
          fi
          
          if [ ! -f ".github/workflows/auto-deploy-seo.yml" ]; then
            missing_files+=(".github/workflows/auto-deploy-seo.yml")
          fi
          
          if [ ! -f ".github/workflows/quick-seo-update.yml" ]; then
            missing_files+=(".github/workflows/quick-seo-update.yml")
          fi
          
          if [ ${#missing_files[@]} -eq 0 ]; then
            echo "‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ"
          else
            echo "‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã:"
            for file in "${missing_files[@]}"; do
              echo "  - $file"
            done
          fi
      
      - name: üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
        if: steps.check-changes.outputs.has_changes == 'true' || github.event.inputs.sync_type == 'force'
        run: |
          echo "üîÑ –í—ã–ø–æ–ª–Ω—è—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é..."
          
          # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
          git add .
          
          # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
          COMMIT_MSG="${{ github.event.inputs.commit_message }}"
          if [ -z "$COMMIT_MSG" ]; then
            COMMIT_MSG="üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è workspace - $(date)"
          fi
          
          git commit -m "$COMMIT_MSG" || {
            echo "‚ÑπÔ∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
            exit 0
          }
          
          echo "‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω: $COMMIT_MSG"
      
      - name: üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        if: steps.check-changes.outputs.has_changes == 'true' || github.event.inputs.sync_type == 'force'
        run: |
          echo "üöÄ –û—Ç–ø—Ä–∞–≤–ª—è—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ GitHub..."
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
          if git log --oneline -1 | grep -q "üîÑ"; then
            git push origin main
            echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub"
          else
            echo "‚ÑπÔ∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏"
          fi
      
      - name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        run: |
          echo "üîç –ü—Ä–æ–≤–µ—Ä—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏..."
          
          # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã
          echo "üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–º–º–∏—Ç—ã:"
          git log --oneline -5
          
          # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
          echo ""
          echo "üìä –°—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:"
          git status --porcelain
          
          echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
      
      - name: üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        if: steps.check-changes.outputs.has_changes == 'true' || github.event.inputs.sync_type == 'force'
        run: |
          echo "üéâ –ê–í–¢–û–°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!"
          echo "=================================="
          echo "‚úÖ –°—Ç–∞—Ç—É—Å: –£—Å–ø–µ—à–Ω–æ"
          echo "‚è∞ –í—Ä–µ–º—è: $(date)"
          echo "üîÑ –¢–∏–ø: ${{ github.event.inputs.sync_type }}"
          echo "üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: ${{ github.event.inputs.commit_message }}"
          echo "üåê –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub"
          echo "üì± –°–∞–π—Ç –æ–±–Ω–æ–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
      
      - name: ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–ø—É—Å–∫–µ
        if: steps.check-changes.outputs.has_changes == 'false' && github.event.inputs.sync_type != 'force'
        run: |
          echo "‚ÑπÔ∏è –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ü–†–û–ü–£–©–ï–ù–ê"
          echo "============================"
          echo "üí° –ü—Ä–∏—á–∏–Ω–∞: –ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
          echo "üí° –î–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'force'"
          echo "üí° –ò–ª–∏ –≤–Ω–µ—Å–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞"