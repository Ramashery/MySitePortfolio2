#!/bin/bash

# üîÑ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –ö–û–ú–ú–ò–¢–´ –ò PUSH
# –ê–≤—Ç–æ—Ä: Digital Craft Team
# –í–µ—Ä—Å–∏—è: 1.0.0 - –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∫–æ–º–º–∏—Ç–æ–≤

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
print_header() {
    echo -e "${PURPLE}"
    echo "=================================================="
    echo "üîÑ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –ö–û–ú–ú–ò–¢–´ –ò PUSH"
    echo "=================================================="
    echo -e "${NC}"
}

print_step() {
    echo -e "${BLUE}üìã $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${CYAN}‚ÑπÔ∏è  $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Git —Å—Ç–∞—Ç—É—Å–∞
check_git_status() {
    print_step "–ü—Ä–æ–≤–µ—Ä—è—é Git —Å—Ç–∞—Ç—É—Å..."
    
    local status=$(git status --porcelain)
    
    if [ -z "$status" ]; then
        print_warning "–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞!"
        print_info "–í—Å–µ —Ñ–∞–π–ª—ã —É–∂–µ –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã"
        return 1
    fi
    
    print_success "–ù–∞–π–¥–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞:"
    echo "$status"
    return 0
}

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
detect_change_type() {
    print_step "–û–ø—Ä–µ–¥–µ–ª—è—é —Ç–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
    
    local js_changes=$(git diff --name-only --cached | grep -E '\.js$' | wc -l)
    local html_changes=$(git diff --name-only --cached | grep -E '\.html$' | wc -l)
    local css_changes=$(git diff --name-only --cached | grep -E '\.css$' | wc -l)
    local config_changes=$(git diff --name-only --cached | grep -E '\.(toml|yml|yaml|json)$' | wc -l)
    local workflow_changes=$(git diff --name-only --cached | grep -E 'workflows/' | wc -l)
    
    local change_type="update"
    local emoji="üîÑ"
    local description="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
    
    if [ $workflow_changes -gt 0 ]; then
        change_type="workflow"
        emoji="‚öôÔ∏è"
        description="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–±–æ—á–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
    elif [ $js_changes -gt 0 ] && [ $html_changes -gt 0 ]; then
        change_type="feature"
        emoji="‚ú®"
        description="–ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"
    elif [ $js_changes -gt 0 ]; then
        change_type="js"
        emoji="üîß"
        description="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ JavaScript"
    elif [ $html_changes -gt 0 ]; then
        change_type="html"
        emoji="üìÑ"
        description="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ HTML"
    elif [ $css_changes -gt 0 ]; then
        change_type="css"
        emoji="üé®"
        description="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π"
    elif [ $config_changes -gt 0 ]; then
        change_type="config"
        emoji="‚öôÔ∏è"
        description="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
    fi
    
    echo "change_type=$change_type" >> $GITHUB_OUTPUT
    echo "emoji=$emoji" >> $GITHUB_OUTPUT
    echo "description=$description" >> $GITHUB_OUTPUT
    
    print_success "–¢–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏–π: $description ($emoji)"
}

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ–º–º–∏—Ç–∞
generate_commit_message() {
    local change_type="$1"
    local emoji="$2"
    local description="$3"
    
    case $change_type in
        "workflow")
            echo "$emoji $description - –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∏ CI/CD"
            ;;
        "feature")
            echo "$emoji $description - –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ —É–ª—É—á—à–µ–Ω–∏—è"
            ;;
        "js")
            echo "$emoji $description - JavaScript —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"
            ;;
        "html")
            echo "$emoji $description - HTML —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç"
            ;;
        "css")
            echo "$emoji $description - –°—Ç–∏–ª–∏ –∏ –¥–∏–∑–∞–π–Ω"
            ;;
        "config")
            echo "$emoji $description - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"
            ;;
        *)
            echo "$emoji $description - –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏—è"
            ;;
    esac
}

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞
create_commit() {
    local change_type="$1"
    local emoji="$2"
    local description="$3"
    
    print_step "–°–æ–∑–¥–∞—é –∫–æ–º–º–∏—Ç..."
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    local commit_message=$(generate_commit_message "$change_type" "$emoji" "$description")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏
    commit_message="$commit_message

üìù –î–µ—Ç–∞–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π:
$(git diff --name-only --cached | sed 's/^/- /')

‚è∞ –í—Ä–µ–º—è: $(date)
üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç"
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
    git commit -m "$commit_message"
    print_success "–ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω: $commit_message"
}

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π push
auto_push() {
    local current_branch=$(git branch --show-current)
    
    print_step "–û—Ç–ø—Ä–∞–≤–ª—è—é –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ GitHub..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ remote
    if ! git remote get-url origin &> /dev/null; then
        print_error "Remote origin –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!"
        print_info "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ remote: git remote add origin <URL>"
        return 1
    fi
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    git push origin "$current_branch"
    print_success "–ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
verify_result() {
    print_step "–ü—Ä–æ–≤–µ—Ä—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç..."
    
    local current_branch=$(git branch --show-current)
    local last_commit=$(git log -1 --oneline)
    
    print_success "‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω: $last_commit"
    print_success "‚úÖ –í–µ—Ç–∫–∞: $current_branch"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã
    if git ls-remote --heads origin "$current_branch" | grep -q "$current_branch"; then
        print_success "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub"
    else
        print_warning "‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã"
    fi
}

# –ü–æ–∫–∞–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–æ–≤
show_next_steps() {
    echo ""
    print_success "üéâ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ö–û–ú–ú–ò–¢ –ó–ê–í–ï–†–®–ï–ù!"
    echo ""
    print_info "üìã –ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ:"
    echo "  ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ Git"
    echo "  ‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    echo "  ‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ GitHub"
    echo ""
    print_info "üöÄ –ß—Ç–æ –±—É–¥–µ—Ç –¥–∞–ª—å—à–µ:"
    echo "  - GitHub Actions –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è"
    echo "  - –°–∞–π—Ç –æ–±–Ω–æ–≤–∏—Ç—Å—è —á–µ—Ä–µ–∑ 2-5 –º–∏–Ω—É—Ç"
    echo "  - SEO —Å–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    echo ""
    print_info "üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å:"
    echo "  - GitHub Actions: –≤–∫–ª–∞–¥–∫–∞ Actions"
    echo "  - Netlify: –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    echo "  - –°–∞–π—Ç: –æ–±–Ω–æ–≤–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    print_header
    
    print_info "–ù–∞—á–∏–Ω–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç –∏ push..."
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    if ! check_git_status; then
        print_info "–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
        exit 0
    fi
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    print_step "–î–æ–±–∞–≤–ª—è—é –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
    git add .
    print_success "–í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã"
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∏–∑–º–µ–Ω–µ–Ω–∏–π
    detect_change_type
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
    create_commit "$change_type" "$emoji" "$description"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ GitHub
    auto_push
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    verify_result
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏
    show_next_steps
    
    echo ""
    print_success "üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –í–∞—à —Å–∞–π—Ç —Å–∫–æ—Ä–æ –æ–±–Ω–æ–≤–∏—Ç—Å—è!"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
trap 'print_error "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ."; exit 1' ERR

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi